%%
%% Copyright 2013 Joaquim Rocha
%% 
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.
%%

-define(PROTOCOL_HTTP, http).
-define(PROTOCOL_HTTPS, https).

-define(ACTION_TYPE_BASIC, action_basic).
-define(ACTION_TYPE_FULL, action_full).

-record(server_config, {
				host = '_',
				protocol = ?PROTOCOL_HTTP,
				port = 8080,
				ssl = none,
				acceptor_number = 100
			}
		).
				
-record(ssl_config, {
				cacertfile, 
				certfile, 
				keyfile
			}
		). 				

-record(template_config, {
				top_page = "index", 
				prefix = "page"
			}
		).
				
-record(resource_config, {
				base_name = "message",
				file_extension = ".txt",  
				file_dir = "./resource"
			}
		).				
					
-record(static_config, {
				path = "/", 
				dir = "./static"
			}
		).
		
-record(action_config, { 
				prefix = "service",
				type = ?ACTION_TYPE_BASIC,
				callback = none							
			}
		).		
		
-record(websocket_config, { 
				path = "websocket"					
			}
		).			

-record(web_app, {
				context = "/",
				server = #server_config{},
				template = none,
				resource = none,
				action = [],
				static = none,
				websocket = none
			}
		).
		
-record(kb_request, {
				context,
				method,
				data
			}
		).